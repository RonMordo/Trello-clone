import { z } from "zod";
export declare const ActivityActionSchema: z.ZodEnum<{
    created: "created";
    moved: "moved";
    updated: "updated";
    commented: "commented";
    closed: "closed";
    reopened: "reopened";
    assigned: "assigned";
    unassigned: "unassigned";
    labeled: "labeled";
    unlabeled: "unlabeled";
    attached: "attached";
    detached: "detached";
}>;
export declare const ColorSchema: z.ZodEnum<{
    subtle_yellow: "subtle_yellow";
    subtle_orange: "subtle_orange";
    subtle_red: "subtle_red";
    subtle_purple: "subtle_purple";
    green: "green";
    yellow: "yellow";
    orange: "orange";
    red: "red";
    purple: "purple";
    bold_green: "bold_green";
    bold_yellow: "bold_yellow";
    bold_orange: "bold_orange";
    bold_red: "bold_red";
    bold_purple: "bold_purple";
    subtle_blue: "subtle_blue";
    subtle_sky: "subtle_sky";
    subtle_lime: "subtle_lime";
    subtle_pink: "subtle_pink";
    subtle_black: "subtle_black";
    blue: "blue";
    sky: "sky";
    lime: "lime";
    pink: "pink";
    black: "black";
    bold_blue: "bold_blue";
    bold_sky: "bold_sky";
    bold_lime: "bold_lime";
    bold_pink: "bold_pink";
    bold_black: "bold_black";
    default: "default";
}>;
export declare const BoardCreationRestrictionsSchema: z.ZodEnum<{
    workspace_member: "workspace_member";
    workspace_admin: "workspace_admin";
    nobody: "nobody";
}>;
export declare const BoardRoleSchema: z.ZodEnum<{
    admin: "admin";
    member: "member";
    observer: "observer";
}>;
export declare const BoardSharingSchema: z.ZodEnum<{
    anybody: "anybody";
    only_workspace_member: "only_workspace_member";
}>;
export declare const BoardVisibilitySchema: z.ZodEnum<{
    private: "private";
    workspace_members: "workspace_members";
    public: "public";
}>;
export declare const BoardBackgroundSchema: z.ZodEnum<{
    mountain: "mountain";
    valley: "valley";
    tree: "tree";
    snow: "snow";
}>;
export declare const CommentingRestrictionsSchema: z.ZodEnum<{
    workspace_members: "workspace_members";
    disabled: "disabled";
    board_members: "board_members";
}>;
export declare const MemberManageRestrictionsSchema: z.ZodEnum<{
    admins: "admins";
    members: "members";
}>;
export declare const MembershipRestrictionsSchema: z.ZodEnum<{
    anybody: "anybody";
    specific_domain: "specific_domain";
}>;
export declare const SlackSharingSchema: z.ZodEnum<{
    workspace_member: "workspace_member";
    admins: "admins";
}>;
export declare const ThemeSchema: z.ZodEnum<{
    light: "light";
    dark: "dark";
    system: "system";
}>;
export declare const WorkspaceRoleSchema: z.ZodEnum<{
    admin: "admin";
    member: "member";
    guest: "guest";
}>;
export declare const WorkspaceTypeSchema: z.ZodEnum<{
    marketing: "marketing";
    sales_crm: "sales_crm";
    human_resources: "human_resources";
    small_business: "small_business";
    engineering_it: "engineering_it";
    education: "education";
    operations: "operations";
    other: "other";
}>;
export declare const WorkspaceVisibilitySchema: z.ZodEnum<{
    private: "private";
    public: "public";
}>;
export declare const UserDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, z.core.$strip>;
export declare const LabelDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    color: z.ZodEnum<{
        subtle_yellow: "subtle_yellow";
        subtle_orange: "subtle_orange";
        subtle_red: "subtle_red";
        subtle_purple: "subtle_purple";
        green: "green";
        yellow: "yellow";
        orange: "orange";
        red: "red";
        purple: "purple";
        bold_green: "bold_green";
        bold_yellow: "bold_yellow";
        bold_orange: "bold_orange";
        bold_red: "bold_red";
        bold_purple: "bold_purple";
        subtle_blue: "subtle_blue";
        subtle_sky: "subtle_sky";
        subtle_lime: "subtle_lime";
        subtle_pink: "subtle_pink";
        subtle_black: "subtle_black";
        blue: "blue";
        sky: "sky";
        lime: "lime";
        pink: "pink";
        black: "black";
        bold_blue: "bold_blue";
        bold_sky: "bold_sky";
        bold_lime: "bold_lime";
        bold_pink: "bold_pink";
        bold_black: "bold_black";
        default: "default";
    }>;
}, z.core.$strip>;
export declare const ActivityLogDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    cardId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    action: z.ZodEnum<{
        created: "created";
        moved: "moved";
        updated: "updated";
        commented: "commented";
        closed: "closed";
        reopened: "reopened";
        assigned: "assigned";
        unassigned: "unassigned";
        labeled: "labeled";
        unlabeled: "unlabeled";
        attached: "attached";
        detached: "detached";
    }>;
    payload: z.ZodOptional<z.ZodUnknown>;
    createdAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const AttachmentDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    cardId: z.ZodUUID;
    userId: z.ZodUUID;
    url: z.ZodString;
    filename: z.ZodString;
    bytes: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    meta: z.ZodOptional<z.ZodUnknown>;
    createdAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const BoardMemberDtoSchema: z.ZodObject<{
    boardId: z.ZodUUID;
    userId: z.ZodUUID;
    role: z.ZodEnum<{
        admin: "admin";
        member: "member";
        observer: "observer";
    }>;
    joinedAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const BoardDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
}, z.core.$strip>;
export declare const CardAssigneeDtoSchema: z.ZodObject<{
    cardId: z.ZodUUID;
    userId: z.ZodUUID;
}, z.core.$strip>;
export declare const CardLabelDtoSchema: z.ZodObject<{
    cardId: z.ZodUUID;
    labelId: z.ZodUUID;
}, z.core.$strip>;
export declare const CardWatcherDtoSchema: z.ZodObject<{
    cardId: z.ZodUUID;
    userId: z.ZodUUID;
    createdAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const CardLocationDtoSchema: z.ZodObject<{
    latitude: z.ZodNumber;
    longitude: z.ZodNumber;
    address: z.ZodString;
}, z.core.$strip>;
export declare const CardDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const ChecklistItemAssigneeDtoSchema: z.ZodObject<{
    itemId: z.ZodUUID;
    userId: z.ZodUUID;
}, z.core.$strip>;
export declare const ChecklistItemDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    checklistId: z.ZodUUID;
    text: z.ZodString;
    isCompleted: z.ZodBoolean;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
}, z.core.$strip>;
export declare const ChecklistDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    cardId: z.ZodUUID;
    title: z.ZodString;
    position: z.ZodNumber;
}, z.core.$strip>;
export declare const CommentDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    cardId: z.ZodUUID;
    userId: z.ZodUUID;
    text: z.ZodString;
    createdAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const ListWatcherDtoSchema: z.ZodObject<{
    listId: z.ZodUUID;
    userId: z.ZodUUID;
    createdAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const ListDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    name: z.ZodString;
    position: z.ZodNumber;
    isArchived: z.ZodBoolean;
    subscribed: z.ZodBoolean;
}, z.core.$strip>;
export declare const WorkspaceMemberDtoSchema: z.ZodObject<{
    workspaceId: z.ZodUUID;
    userId: z.ZodUUID;
    role: z.ZodEnum<{
        admin: "admin";
        member: "member";
        guest: "guest";
    }>;
    joinedAt: z.ZodISODateTime;
}, z.core.$strip>;
export declare const WorkspaceDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    visibility: z.ZodEnum<{
        private: "private";
        public: "public";
    }>;
    premium: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    type: z.ZodEnum<{
        marketing: "marketing";
        sales_crm: "sales_crm";
        human_resources: "human_resources";
        small_business: "small_business";
        engineering_it: "engineering_it";
        education: "education";
        operations: "operations";
        other: "other";
    }>;
    createdBy: z.ZodUUID;
    workspaceMembershipRestrictions: z.ZodEnum<{
        anybody: "anybody";
        specific_domain: "specific_domain";
    }>;
    publicBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    publicBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    allowGuestSharing: z.ZodEnum<{
        anybody: "anybody";
        only_workspace_member: "only_workspace_member";
    }>;
    allowSlackIntegration: z.ZodEnum<{
        workspace_member: "workspace_member";
        admins: "admins";
    }>;
}, z.core.$strip>;
export declare const BoardWithLabelsSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
    labels: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        boardId: z.ZodUUID;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const BoardWithListsSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
    lists: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        boardId: z.ZodUUID;
        name: z.ZodString;
        position: z.ZodNumber;
        isArchived: z.ZodBoolean;
        subscribed: z.ZodBoolean;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const BoardWithMembersSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
    members: z.ZodArray<z.ZodObject<{
        boardId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            observer: "observer";
        }>;
        joinedAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const BoardWithCreatorSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
    creator: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const BoardWithWorkspaceSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
    workspace: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        visibility: z.ZodEnum<{
            private: "private";
            public: "public";
        }>;
        premium: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        type: z.ZodEnum<{
            marketing: "marketing";
            sales_crm: "sales_crm";
            human_resources: "human_resources";
            small_business: "small_business";
            engineering_it: "engineering_it";
            education: "education";
            operations: "operations";
            other: "other";
        }>;
        createdBy: z.ZodUUID;
        workspaceMembershipRestrictions: z.ZodEnum<{
            anybody: "anybody";
            specific_domain: "specific_domain";
        }>;
        publicBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        publicBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        allowGuestSharing: z.ZodEnum<{
            anybody: "anybody";
            only_workspace_member: "only_workspace_member";
        }>;
        allowSlackIntegration: z.ZodEnum<{
            workspace_member: "workspace_member";
            admins: "admins";
        }>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ListWithCardsSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    name: z.ZodString;
    position: z.ZodNumber;
    isArchived: z.ZodBoolean;
    subscribed: z.ZodBoolean;
    cards: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        listId: z.ZodUUID;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        position: z.ZodNumber;
        isWatch: z.ZodBoolean;
        cardAssignees: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
        }, z.core.$strip>>;
        attachmentsCount: z.ZodNumber;
        commentsCount: z.ZodNumber;
        checklistItemsCount: z.ZodNumber;
        completedChecklistItemsCount: z.ZodNumber;
        labels: z.ZodArray<z.ZodObject<{
            color: z.ZodEnum<{
                subtle_yellow: "subtle_yellow";
                subtle_orange: "subtle_orange";
                subtle_red: "subtle_red";
                subtle_purple: "subtle_purple";
                green: "green";
                yellow: "yellow";
                orange: "orange";
                red: "red";
                purple: "purple";
                bold_green: "bold_green";
                bold_yellow: "bold_yellow";
                bold_orange: "bold_orange";
                bold_red: "bold_red";
                bold_purple: "bold_purple";
                subtle_blue: "subtle_blue";
                subtle_sky: "subtle_sky";
                subtle_lime: "subtle_lime";
                subtle_pink: "subtle_pink";
                subtle_black: "subtle_black";
                blue: "blue";
                sky: "sky";
                lime: "lime";
                pink: "pink";
                black: "black";
                bold_blue: "bold_blue";
                bold_sky: "bold_sky";
                bold_lime: "bold_lime";
                bold_pink: "bold_pink";
                bold_black: "bold_black";
                default: "default";
            }>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, z.core.$strip>>;
        location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodString;
        }, z.core.$strip>>>;
        isArchived: z.ZodBoolean;
        createdBy: z.ZodUUID;
        coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const BoardWithListsAndCardsSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
    lists: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        boardId: z.ZodUUID;
        name: z.ZodString;
        position: z.ZodNumber;
        isArchived: z.ZodBoolean;
        subscribed: z.ZodBoolean;
        cards: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            listId: z.ZodUUID;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            isWatch: z.ZodBoolean;
            cardAssignees: z.ZodArray<z.ZodObject<{
                id: z.ZodUUID;
                username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                fullName: z.ZodString;
                avatarUrl: z.ZodString;
            }, z.core.$strip>>;
            attachmentsCount: z.ZodNumber;
            commentsCount: z.ZodNumber;
            checklistItemsCount: z.ZodNumber;
            completedChecklistItemsCount: z.ZodNumber;
            labels: z.ZodArray<z.ZodObject<{
                color: z.ZodEnum<{
                    subtle_yellow: "subtle_yellow";
                    subtle_orange: "subtle_orange";
                    subtle_red: "subtle_red";
                    subtle_purple: "subtle_purple";
                    green: "green";
                    yellow: "yellow";
                    orange: "orange";
                    red: "red";
                    purple: "purple";
                    bold_green: "bold_green";
                    bold_yellow: "bold_yellow";
                    bold_orange: "bold_orange";
                    bold_red: "bold_red";
                    bold_purple: "bold_purple";
                    subtle_blue: "subtle_blue";
                    subtle_sky: "subtle_sky";
                    subtle_lime: "subtle_lime";
                    subtle_pink: "subtle_pink";
                    subtle_black: "subtle_black";
                    blue: "blue";
                    sky: "sky";
                    lime: "lime";
                    pink: "pink";
                    black: "black";
                    bold_blue: "bold_blue";
                    bold_sky: "bold_sky";
                    bold_lime: "bold_lime";
                    bold_pink: "bold_pink";
                    bold_black: "bold_black";
                    default: "default";
                }>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, z.core.$strip>>;
            location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                latitude: z.ZodNumber;
                longitude: z.ZodNumber;
                address: z.ZodString;
            }, z.core.$strip>>>;
            isArchived: z.ZodBoolean;
            createdBy: z.ZodUUID;
            coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const BoardFullDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    workspaceId: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    createdBy: z.ZodUUID;
    allowCovers: z.ZodBoolean;
    showComplete: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    memberManage: z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>;
    commenting: z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>;
    labels: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        boardId: z.ZodUUID;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
    }, z.core.$strip>>;
    members: z.ZodArray<z.ZodObject<{
        boardId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            observer: "observer";
        }>;
        joinedAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    lists: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        boardId: z.ZodUUID;
        name: z.ZodString;
        position: z.ZodNumber;
        isArchived: z.ZodBoolean;
        subscribed: z.ZodBoolean;
        watchers: z.ZodArray<z.ZodObject<{
            listId: z.ZodUUID;
            userId: z.ZodUUID;
            createdAt: z.ZodISODateTime;
        }, z.core.$strip>>;
        cards: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            listId: z.ZodUUID;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            isWatch: z.ZodBoolean;
            cardAssignees: z.ZodArray<z.ZodObject<{
                id: z.ZodUUID;
                username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                fullName: z.ZodString;
                avatarUrl: z.ZodString;
            }, z.core.$strip>>;
            attachmentsCount: z.ZodNumber;
            commentsCount: z.ZodNumber;
            checklistItemsCount: z.ZodNumber;
            completedChecklistItemsCount: z.ZodNumber;
            labels: z.ZodArray<z.ZodObject<{
                color: z.ZodEnum<{
                    subtle_yellow: "subtle_yellow";
                    subtle_orange: "subtle_orange";
                    subtle_red: "subtle_red";
                    subtle_purple: "subtle_purple";
                    green: "green";
                    yellow: "yellow";
                    orange: "orange";
                    red: "red";
                    purple: "purple";
                    bold_green: "bold_green";
                    bold_yellow: "bold_yellow";
                    bold_orange: "bold_orange";
                    bold_red: "bold_red";
                    bold_purple: "bold_purple";
                    subtle_blue: "subtle_blue";
                    subtle_sky: "subtle_sky";
                    subtle_lime: "subtle_lime";
                    subtle_pink: "subtle_pink";
                    subtle_black: "subtle_black";
                    blue: "blue";
                    sky: "sky";
                    lime: "lime";
                    pink: "pink";
                    black: "black";
                    bold_blue: "bold_blue";
                    bold_sky: "bold_sky";
                    bold_lime: "bold_lime";
                    bold_pink: "bold_pink";
                    bold_black: "bold_black";
                    default: "default";
                }>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, z.core.$strip>>;
            location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                latitude: z.ZodNumber;
                longitude: z.ZodNumber;
                address: z.ZodString;
            }, z.core.$strip>>>;
            isArchived: z.ZodBoolean;
            createdBy: z.ZodUUID;
            coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
    creator: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
    workspace: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        visibility: z.ZodEnum<{
            private: "private";
            public: "public";
        }>;
        premium: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        type: z.ZodEnum<{
            marketing: "marketing";
            sales_crm: "sales_crm";
            human_resources: "human_resources";
            small_business: "small_business";
            engineering_it: "engineering_it";
            education: "education";
            operations: "operations";
            other: "other";
        }>;
        createdBy: z.ZodUUID;
        workspaceMembershipRestrictions: z.ZodEnum<{
            anybody: "anybody";
            specific_domain: "specific_domain";
        }>;
        publicBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        publicBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        allowGuestSharing: z.ZodEnum<{
            anybody: "anybody";
            only_workspace_member: "only_workspace_member";
        }>;
        allowSlackIntegration: z.ZodEnum<{
            workspace_member: "workspace_member";
            admins: "admins";
        }>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const BoardMemberWithUserSchema: z.ZodObject<{
    boardId: z.ZodUUID;
    userId: z.ZodUUID;
    role: z.ZodEnum<{
        admin: "admin";
        member: "member";
        observer: "observer";
    }>;
    joinedAt: z.ZodISODateTime;
    user: z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const ListWithWatchersIdsSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    name: z.ZodString;
    position: z.ZodNumber;
    isArchived: z.ZodBoolean;
    subscribed: z.ZodBoolean;
    watchers: z.ZodArray<z.ZodObject<{
        listId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ListWithWatchersSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    name: z.ZodString;
    position: z.ZodNumber;
    isArchived: z.ZodBoolean;
    subscribed: z.ZodBoolean;
    watchers: z.ZodArray<z.ZodObject<{
        listId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ListWithCardsAndWatchersSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    name: z.ZodString;
    position: z.ZodNumber;
    isArchived: z.ZodBoolean;
    subscribed: z.ZodBoolean;
    cards: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        listId: z.ZodUUID;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        position: z.ZodNumber;
        isWatch: z.ZodBoolean;
        cardAssignees: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
        }, z.core.$strip>>;
        attachmentsCount: z.ZodNumber;
        commentsCount: z.ZodNumber;
        checklistItemsCount: z.ZodNumber;
        completedChecklistItemsCount: z.ZodNumber;
        labels: z.ZodArray<z.ZodObject<{
            color: z.ZodEnum<{
                subtle_yellow: "subtle_yellow";
                subtle_orange: "subtle_orange";
                subtle_red: "subtle_red";
                subtle_purple: "subtle_purple";
                green: "green";
                yellow: "yellow";
                orange: "orange";
                red: "red";
                purple: "purple";
                bold_green: "bold_green";
                bold_yellow: "bold_yellow";
                bold_orange: "bold_orange";
                bold_red: "bold_red";
                bold_purple: "bold_purple";
                subtle_blue: "subtle_blue";
                subtle_sky: "subtle_sky";
                subtle_lime: "subtle_lime";
                subtle_pink: "subtle_pink";
                subtle_black: "subtle_black";
                blue: "blue";
                sky: "sky";
                lime: "lime";
                pink: "pink";
                black: "black";
                bold_blue: "bold_blue";
                bold_sky: "bold_sky";
                bold_lime: "bold_lime";
                bold_pink: "bold_pink";
                bold_black: "bold_black";
                default: "default";
            }>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, z.core.$strip>>;
        location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodString;
        }, z.core.$strip>>>;
        isArchived: z.ZodBoolean;
        createdBy: z.ZodUUID;
        coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
    }, z.core.$strip>>;
    watchers: z.ZodArray<z.ZodObject<{
        listId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithAttachmentsSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    attachments: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        url: z.ZodString;
        filename: z.ZodString;
        bytes: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        meta: z.ZodOptional<z.ZodUnknown>;
        createdAt: z.ZodISODateTime;
        user: z.ZodNullable<z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithAssigneesIdsSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    assignees: z.ZodArray<z.ZodObject<{
        userId: z.ZodUUID;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithAssigneesSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    assignees: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithLabelsIdsSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    cardLabels: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        labelId: z.ZodUUID;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithLabelsSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    cardLabels: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        labelId: z.ZodUUID;
        label: z.ZodObject<{
            id: z.ZodUUID;
            boardId: z.ZodUUID;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            color: z.ZodEnum<{
                subtle_yellow: "subtle_yellow";
                subtle_orange: "subtle_orange";
                subtle_red: "subtle_red";
                subtle_purple: "subtle_purple";
                green: "green";
                yellow: "yellow";
                orange: "orange";
                red: "red";
                purple: "purple";
                bold_green: "bold_green";
                bold_yellow: "bold_yellow";
                bold_orange: "bold_orange";
                bold_red: "bold_red";
                bold_purple: "bold_purple";
                subtle_blue: "subtle_blue";
                subtle_sky: "subtle_sky";
                subtle_lime: "subtle_lime";
                subtle_pink: "subtle_pink";
                subtle_black: "subtle_black";
                blue: "blue";
                sky: "sky";
                lime: "lime";
                pink: "pink";
                black: "black";
                bold_blue: "bold_blue";
                bold_sky: "bold_sky";
                bold_lime: "bold_lime";
                bold_pink: "bold_pink";
                bold_black: "bold_black";
                default: "default";
            }>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ChecklistItemWithAssigneesSchema: z.ZodObject<{
    id: z.ZodUUID;
    checklistId: z.ZodUUID;
    text: z.ZodString;
    isCompleted: z.ZodBoolean;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    assignees: z.ZodArray<z.ZodObject<{
        itemId: z.ZodUUID;
        userId: z.ZodUUID;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ChecklistWithItemsSchema: z.ZodObject<{
    id: z.ZodUUID;
    cardId: z.ZodUUID;
    title: z.ZodString;
    position: z.ZodNumber;
    items: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        checklistId: z.ZodUUID;
        text: z.ZodString;
        isCompleted: z.ZodBoolean;
        dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        position: z.ZodNumber;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ChecklistWithItemsAndAssigneesSchema: z.ZodObject<{
    id: z.ZodUUID;
    cardId: z.ZodUUID;
    title: z.ZodString;
    position: z.ZodNumber;
    items: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        checklistId: z.ZodUUID;
        text: z.ZodString;
        isCompleted: z.ZodBoolean;
        dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        position: z.ZodNumber;
        assignees: z.ZodArray<z.ZodObject<{
            itemId: z.ZodUUID;
            userId: z.ZodUUID;
            user: z.ZodObject<{
                id: z.ZodUUID;
                clerkId: z.ZodString;
                email: z.ZodEmail;
                username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                fullName: z.ZodString;
                avatarUrl: z.ZodString;
                theme: z.ZodEnum<{
                    light: "light";
                    dark: "dark";
                    system: "system";
                }>;
                emailNotification: z.ZodBoolean;
                pushNotification: z.ZodBoolean;
                createdAt: z.ZodISODateTime;
                bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, z.core.$strip>;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithChecklistsSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    checklists: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        cardId: z.ZodUUID;
        title: z.ZodString;
        position: z.ZodNumber;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithChecklistsDeepSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    checklists: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        cardId: z.ZodUUID;
        title: z.ZodString;
        position: z.ZodNumber;
        items: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            checklistId: z.ZodUUID;
            text: z.ZodString;
            isCompleted: z.ZodBoolean;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            assignees: z.ZodArray<z.ZodObject<{
                itemId: z.ZodUUID;
                userId: z.ZodUUID;
                user: z.ZodObject<{
                    id: z.ZodUUID;
                    clerkId: z.ZodString;
                    email: z.ZodEmail;
                    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    fullName: z.ZodString;
                    avatarUrl: z.ZodString;
                    theme: z.ZodEnum<{
                        light: "light";
                        dark: "dark";
                        system: "system";
                    }>;
                    emailNotification: z.ZodBoolean;
                    pushNotification: z.ZodBoolean;
                    createdAt: z.ZodISODateTime;
                    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                }, z.core.$strip>;
            }, z.core.$strip>>;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CommentWithUserSchema: z.ZodObject<{
    id: z.ZodUUID;
    cardId: z.ZodUUID;
    userId: z.ZodUUID;
    text: z.ZodString;
    createdAt: z.ZodISODateTime;
    user: z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const CardWithCommentsSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    comments: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        text: z.ZodString;
        createdAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithWatchersIdsSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    watchers: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithWatchersSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    watchers: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithCreatorSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    creator: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const CardWithListSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    list: z.ZodObject<{
        id: z.ZodUUID;
        boardId: z.ZodUUID;
        name: z.ZodString;
        position: z.ZodNumber;
        isArchived: z.ZodBoolean;
        subscribed: z.ZodBoolean;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const CardFullDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    listId: z.ZodUUID;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
    position: z.ZodNumber;
    isWatch: z.ZodBoolean;
    cardAssignees: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>;
    attachmentsCount: z.ZodNumber;
    commentsCount: z.ZodNumber;
    checklistItemsCount: z.ZodNumber;
    completedChecklistItemsCount: z.ZodNumber;
    labels: z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
    isArchived: z.ZodBoolean;
    createdBy: z.ZodUUID;
    coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    attachments: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        url: z.ZodString;
        filename: z.ZodString;
        bytes: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        meta: z.ZodOptional<z.ZodUnknown>;
        createdAt: z.ZodISODateTime;
        user: z.ZodNullable<z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
    assignees: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    cardLabels: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        labelId: z.ZodUUID;
        label: z.ZodObject<{
            id: z.ZodUUID;
            boardId: z.ZodUUID;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            color: z.ZodEnum<{
                subtle_yellow: "subtle_yellow";
                subtle_orange: "subtle_orange";
                subtle_red: "subtle_red";
                subtle_purple: "subtle_purple";
                green: "green";
                yellow: "yellow";
                orange: "orange";
                red: "red";
                purple: "purple";
                bold_green: "bold_green";
                bold_yellow: "bold_yellow";
                bold_orange: "bold_orange";
                bold_red: "bold_red";
                bold_purple: "bold_purple";
                subtle_blue: "subtle_blue";
                subtle_sky: "subtle_sky";
                subtle_lime: "subtle_lime";
                subtle_pink: "subtle_pink";
                subtle_black: "subtle_black";
                blue: "blue";
                sky: "sky";
                lime: "lime";
                pink: "pink";
                black: "black";
                bold_blue: "bold_blue";
                bold_sky: "bold_sky";
                bold_lime: "bold_lime";
                bold_pink: "bold_pink";
                bold_black: "bold_black";
                default: "default";
            }>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    comments: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        text: z.ZodString;
        createdAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    checklists: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        cardId: z.ZodUUID;
        title: z.ZodString;
        position: z.ZodNumber;
        items: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            checklistId: z.ZodUUID;
            text: z.ZodString;
            isCompleted: z.ZodBoolean;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            assignees: z.ZodArray<z.ZodObject<{
                itemId: z.ZodUUID;
                userId: z.ZodUUID;
                user: z.ZodObject<{
                    id: z.ZodUUID;
                    clerkId: z.ZodString;
                    email: z.ZodEmail;
                    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    fullName: z.ZodString;
                    avatarUrl: z.ZodString;
                    theme: z.ZodEnum<{
                        light: "light";
                        dark: "dark";
                        system: "system";
                    }>;
                    emailNotification: z.ZodBoolean;
                    pushNotification: z.ZodBoolean;
                    createdAt: z.ZodISODateTime;
                    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                }, z.core.$strip>;
            }, z.core.$strip>>;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
    watchers: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    creator: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
    list: z.ZodObject<{
        id: z.ZodUUID;
        boardId: z.ZodUUID;
        name: z.ZodString;
        position: z.ZodNumber;
        isArchived: z.ZodBoolean;
        subscribed: z.ZodBoolean;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const LabelWithBoardSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    color: z.ZodEnum<{
        subtle_yellow: "subtle_yellow";
        subtle_orange: "subtle_orange";
        subtle_red: "subtle_red";
        subtle_purple: "subtle_purple";
        green: "green";
        yellow: "yellow";
        orange: "orange";
        red: "red";
        purple: "purple";
        bold_green: "bold_green";
        bold_yellow: "bold_yellow";
        bold_orange: "bold_orange";
        bold_red: "bold_red";
        bold_purple: "bold_purple";
        subtle_blue: "subtle_blue";
        subtle_sky: "subtle_sky";
        subtle_lime: "subtle_lime";
        subtle_pink: "subtle_pink";
        subtle_black: "subtle_black";
        blue: "blue";
        sky: "sky";
        lime: "lime";
        pink: "pink";
        black: "black";
        bold_blue: "bold_blue";
        bold_sky: "bold_sky";
        bold_lime: "bold_lime";
        bold_pink: "bold_pink";
        bold_black: "bold_black";
        default: "default";
    }>;
    board: z.ZodObject<{
        id: z.ZodUUID;
        workspaceId: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        background: z.ZodEnum<{
            mountain: "mountain";
            valley: "valley";
            tree: "tree";
            snow: "snow";
        }>;
        createdBy: z.ZodUUID;
        allowCovers: z.ZodBoolean;
        showComplete: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        visibility: z.ZodEnum<{
            private: "private";
            workspace_members: "workspace_members";
            public: "public";
        }>;
        memberManage: z.ZodEnum<{
            admins: "admins";
            members: "members";
        }>;
        commenting: z.ZodEnum<{
            workspace_members: "workspace_members";
            disabled: "disabled";
            board_members: "board_members";
        }>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const AttachmentWithCardAndUserSchema: z.ZodObject<{
    id: z.ZodUUID;
    cardId: z.ZodUUID;
    userId: z.ZodUUID;
    url: z.ZodString;
    filename: z.ZodString;
    bytes: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    meta: z.ZodOptional<z.ZodUnknown>;
    createdAt: z.ZodISODateTime;
    card: z.ZodObject<{
        id: z.ZodUUID;
        listId: z.ZodUUID;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        position: z.ZodNumber;
        isWatch: z.ZodBoolean;
        cardAssignees: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
        }, z.core.$strip>>;
        attachmentsCount: z.ZodNumber;
        commentsCount: z.ZodNumber;
        checklistItemsCount: z.ZodNumber;
        completedChecklistItemsCount: z.ZodNumber;
        labels: z.ZodArray<z.ZodObject<{
            color: z.ZodEnum<{
                subtle_yellow: "subtle_yellow";
                subtle_orange: "subtle_orange";
                subtle_red: "subtle_red";
                subtle_purple: "subtle_purple";
                green: "green";
                yellow: "yellow";
                orange: "orange";
                red: "red";
                purple: "purple";
                bold_green: "bold_green";
                bold_yellow: "bold_yellow";
                bold_orange: "bold_orange";
                bold_red: "bold_red";
                bold_purple: "bold_purple";
                subtle_blue: "subtle_blue";
                subtle_sky: "subtle_sky";
                subtle_lime: "subtle_lime";
                subtle_pink: "subtle_pink";
                subtle_black: "subtle_black";
                blue: "blue";
                sky: "sky";
                lime: "lime";
                pink: "pink";
                black: "black";
                bold_blue: "bold_blue";
                bold_sky: "bold_sky";
                bold_lime: "bold_lime";
                bold_pink: "bold_pink";
                bold_black: "bold_black";
                default: "default";
            }>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, z.core.$strip>>;
        location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodString;
        }, z.core.$strip>>>;
        isArchived: z.ZodBoolean;
        createdBy: z.ZodUUID;
        coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
    }, z.core.$strip>;
    user: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ActivityLogWithBoardSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    cardId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    action: z.ZodEnum<{
        created: "created";
        moved: "moved";
        updated: "updated";
        commented: "commented";
        closed: "closed";
        reopened: "reopened";
        assigned: "assigned";
        unassigned: "unassigned";
        labeled: "labeled";
        unlabeled: "unlabeled";
        attached: "attached";
        detached: "detached";
    }>;
    payload: z.ZodOptional<z.ZodUnknown>;
    createdAt: z.ZodISODateTime;
    board: z.ZodObject<{
        id: z.ZodUUID;
        workspaceId: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        background: z.ZodEnum<{
            mountain: "mountain";
            valley: "valley";
            tree: "tree";
            snow: "snow";
        }>;
        createdBy: z.ZodUUID;
        allowCovers: z.ZodBoolean;
        showComplete: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        visibility: z.ZodEnum<{
            private: "private";
            workspace_members: "workspace_members";
            public: "public";
        }>;
        memberManage: z.ZodEnum<{
            admins: "admins";
            members: "members";
        }>;
        commenting: z.ZodEnum<{
            workspace_members: "workspace_members";
            disabled: "disabled";
            board_members: "board_members";
        }>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const ActivityLogWithCardSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    cardId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    action: z.ZodEnum<{
        created: "created";
        moved: "moved";
        updated: "updated";
        commented: "commented";
        closed: "closed";
        reopened: "reopened";
        assigned: "assigned";
        unassigned: "unassigned";
        labeled: "labeled";
        unlabeled: "unlabeled";
        attached: "attached";
        detached: "detached";
    }>;
    payload: z.ZodOptional<z.ZodUnknown>;
    createdAt: z.ZodISODateTime;
    card: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        listId: z.ZodUUID;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        position: z.ZodNumber;
        isWatch: z.ZodBoolean;
        cardAssignees: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
        }, z.core.$strip>>;
        attachmentsCount: z.ZodNumber;
        commentsCount: z.ZodNumber;
        checklistItemsCount: z.ZodNumber;
        completedChecklistItemsCount: z.ZodNumber;
        labels: z.ZodArray<z.ZodObject<{
            color: z.ZodEnum<{
                subtle_yellow: "subtle_yellow";
                subtle_orange: "subtle_orange";
                subtle_red: "subtle_red";
                subtle_purple: "subtle_purple";
                green: "green";
                yellow: "yellow";
                orange: "orange";
                red: "red";
                purple: "purple";
                bold_green: "bold_green";
                bold_yellow: "bold_yellow";
                bold_orange: "bold_orange";
                bold_red: "bold_red";
                bold_purple: "bold_purple";
                subtle_blue: "subtle_blue";
                subtle_sky: "subtle_sky";
                subtle_lime: "subtle_lime";
                subtle_pink: "subtle_pink";
                subtle_black: "subtle_black";
                blue: "blue";
                sky: "sky";
                lime: "lime";
                pink: "pink";
                black: "black";
                bold_blue: "bold_blue";
                bold_sky: "bold_sky";
                bold_lime: "bold_lime";
                bold_pink: "bold_pink";
                bold_black: "bold_black";
                default: "default";
            }>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, z.core.$strip>>;
        location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodString;
        }, z.core.$strip>>>;
        isArchived: z.ZodBoolean;
        createdBy: z.ZodUUID;
        coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ActivityLogWithUserSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    cardId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    action: z.ZodEnum<{
        created: "created";
        moved: "moved";
        updated: "updated";
        commented: "commented";
        closed: "closed";
        reopened: "reopened";
        assigned: "assigned";
        unassigned: "unassigned";
        labeled: "labeled";
        unlabeled: "unlabeled";
        attached: "attached";
        detached: "detached";
    }>;
    payload: z.ZodOptional<z.ZodUnknown>;
    createdAt: z.ZodISODateTime;
    user: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const ActivityLogFullSchema: z.ZodObject<{
    id: z.ZodUUID;
    boardId: z.ZodUUID;
    cardId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodUUID>>;
    action: z.ZodEnum<{
        created: "created";
        moved: "moved";
        updated: "updated";
        commented: "commented";
        closed: "closed";
        reopened: "reopened";
        assigned: "assigned";
        unassigned: "unassigned";
        labeled: "labeled";
        unlabeled: "unlabeled";
        attached: "attached";
        detached: "detached";
    }>;
    payload: z.ZodOptional<z.ZodUnknown>;
    createdAt: z.ZodISODateTime;
    board: z.ZodObject<{
        id: z.ZodUUID;
        workspaceId: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        background: z.ZodEnum<{
            mountain: "mountain";
            valley: "valley";
            tree: "tree";
            snow: "snow";
        }>;
        createdBy: z.ZodUUID;
        allowCovers: z.ZodBoolean;
        showComplete: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        visibility: z.ZodEnum<{
            private: "private";
            workspace_members: "workspace_members";
            public: "public";
        }>;
        memberManage: z.ZodEnum<{
            admins: "admins";
            members: "members";
        }>;
        commenting: z.ZodEnum<{
            workspace_members: "workspace_members";
            disabled: "disabled";
            board_members: "board_members";
        }>;
    }, z.core.$strip>;
    card: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        listId: z.ZodUUID;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        position: z.ZodNumber;
        isWatch: z.ZodBoolean;
        cardAssignees: z.ZodArray<z.ZodObject<{
            id: z.ZodUUID;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
        }, z.core.$strip>>;
        attachmentsCount: z.ZodNumber;
        commentsCount: z.ZodNumber;
        checklistItemsCount: z.ZodNumber;
        completedChecklistItemsCount: z.ZodNumber;
        labels: z.ZodArray<z.ZodObject<{
            color: z.ZodEnum<{
                subtle_yellow: "subtle_yellow";
                subtle_orange: "subtle_orange";
                subtle_red: "subtle_red";
                subtle_purple: "subtle_purple";
                green: "green";
                yellow: "yellow";
                orange: "orange";
                red: "red";
                purple: "purple";
                bold_green: "bold_green";
                bold_yellow: "bold_yellow";
                bold_orange: "bold_orange";
                bold_red: "bold_red";
                bold_purple: "bold_purple";
                subtle_blue: "subtle_blue";
                subtle_sky: "subtle_sky";
                subtle_lime: "subtle_lime";
                subtle_pink: "subtle_pink";
                subtle_black: "subtle_black";
                blue: "blue";
                sky: "sky";
                lime: "lime";
                pink: "pink";
                black: "black";
                bold_blue: "bold_blue";
                bold_sky: "bold_sky";
                bold_lime: "bold_lime";
                bold_pink: "bold_pink";
                bold_black: "bold_black";
                default: "default";
            }>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, z.core.$strip>>;
        location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodString;
        }, z.core.$strip>>>;
        isArchived: z.ZodBoolean;
        createdBy: z.ZodUUID;
        coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
    }, z.core.$strip>>;
    user: z.ZodNullable<z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithCreatedBoardsSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    boards: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        workspaceId: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        background: z.ZodEnum<{
            mountain: "mountain";
            valley: "valley";
            tree: "tree";
            snow: "snow";
        }>;
        createdBy: z.ZodUUID;
        allowCovers: z.ZodBoolean;
        showComplete: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        visibility: z.ZodEnum<{
            private: "private";
            workspace_members: "workspace_members";
            public: "public";
        }>;
        memberManage: z.ZodEnum<{
            admins: "admins";
            members: "members";
        }>;
        commenting: z.ZodEnum<{
            workspace_members: "workspace_members";
            disabled: "disabled";
            board_members: "board_members";
        }>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithBoardMembershipsSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    boardMembers: z.ZodArray<z.ZodObject<{
        boardId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            observer: "observer";
        }>;
        joinedAt: z.ZodISODateTime;
        board: z.ZodObject<{
            id: z.ZodUUID;
            workspaceId: z.ZodUUID;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            background: z.ZodEnum<{
                mountain: "mountain";
                valley: "valley";
                tree: "tree";
                snow: "snow";
            }>;
            createdBy: z.ZodUUID;
            allowCovers: z.ZodBoolean;
            showComplete: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
            lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            visibility: z.ZodEnum<{
                private: "private";
                workspace_members: "workspace_members";
                public: "public";
            }>;
            memberManage: z.ZodEnum<{
                admins: "admins";
                members: "members";
            }>;
            commenting: z.ZodEnum<{
                workspace_members: "workspace_members";
                disabled: "disabled";
                board_members: "board_members";
            }>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithCreatedWorkspacesSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    workspaces: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        visibility: z.ZodEnum<{
            private: "private";
            public: "public";
        }>;
        premium: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        type: z.ZodEnum<{
            marketing: "marketing";
            sales_crm: "sales_crm";
            human_resources: "human_resources";
            small_business: "small_business";
            engineering_it: "engineering_it";
            education: "education";
            operations: "operations";
            other: "other";
        }>;
        createdBy: z.ZodUUID;
        workspaceMembershipRestrictions: z.ZodEnum<{
            anybody: "anybody";
            specific_domain: "specific_domain";
        }>;
        publicBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        publicBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        allowGuestSharing: z.ZodEnum<{
            anybody: "anybody";
            only_workspace_member: "only_workspace_member";
        }>;
        allowSlackIntegration: z.ZodEnum<{
            workspace_member: "workspace_member";
            admins: "admins";
        }>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithWorkspaceMembershipsSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    workspaceMembers: z.ZodArray<z.ZodObject<{
        workspaceId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            guest: "guest";
        }>;
        joinedAt: z.ZodISODateTime;
        workspace: z.ZodObject<{
            id: z.ZodUUID;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            visibility: z.ZodEnum<{
                private: "private";
                public: "public";
            }>;
            premium: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
            type: z.ZodEnum<{
                marketing: "marketing";
                sales_crm: "sales_crm";
                human_resources: "human_resources";
                small_business: "small_business";
                engineering_it: "engineering_it";
                education: "education";
                operations: "operations";
                other: "other";
            }>;
            createdBy: z.ZodUUID;
            workspaceMembershipRestrictions: z.ZodEnum<{
                anybody: "anybody";
                specific_domain: "specific_domain";
            }>;
            publicBoardCreation: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            workspaceBoardCreation: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            privateBoardCreation: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            publicBoardDeletion: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            workspaceBoardDeletion: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            privateBoardDeletion: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            allowGuestSharing: z.ZodEnum<{
                anybody: "anybody";
                only_workspace_member: "only_workspace_member";
            }>;
            allowSlackIntegration: z.ZodEnum<{
                workspace_member: "workspace_member";
                admins: "admins";
            }>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithCardAssignmentsIdsSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    cardAssignees: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithCardAssignmentsSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    cardAssignees: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        card: z.ZodObject<{
            id: z.ZodUUID;
            listId: z.ZodUUID;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            isWatch: z.ZodBoolean;
            cardAssignees: z.ZodArray<z.ZodObject<{
                id: z.ZodUUID;
                username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                fullName: z.ZodString;
                avatarUrl: z.ZodString;
            }, z.core.$strip>>;
            attachmentsCount: z.ZodNumber;
            commentsCount: z.ZodNumber;
            checklistItemsCount: z.ZodNumber;
            completedChecklistItemsCount: z.ZodNumber;
            labels: z.ZodArray<z.ZodObject<{
                color: z.ZodEnum<{
                    subtle_yellow: "subtle_yellow";
                    subtle_orange: "subtle_orange";
                    subtle_red: "subtle_red";
                    subtle_purple: "subtle_purple";
                    green: "green";
                    yellow: "yellow";
                    orange: "orange";
                    red: "red";
                    purple: "purple";
                    bold_green: "bold_green";
                    bold_yellow: "bold_yellow";
                    bold_orange: "bold_orange";
                    bold_red: "bold_red";
                    bold_purple: "bold_purple";
                    subtle_blue: "subtle_blue";
                    subtle_sky: "subtle_sky";
                    subtle_lime: "subtle_lime";
                    subtle_pink: "subtle_pink";
                    subtle_black: "subtle_black";
                    blue: "blue";
                    sky: "sky";
                    lime: "lime";
                    pink: "pink";
                    black: "black";
                    bold_blue: "bold_blue";
                    bold_sky: "bold_sky";
                    bold_lime: "bold_lime";
                    bold_pink: "bold_pink";
                    bold_black: "bold_black";
                    default: "default";
                }>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, z.core.$strip>>;
            location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                latitude: z.ZodNumber;
                longitude: z.ZodNumber;
                address: z.ZodString;
            }, z.core.$strip>>>;
            isArchived: z.ZodBoolean;
            createdBy: z.ZodUUID;
            coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithWatchlistsSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    listWatchers: z.ZodArray<z.ZodObject<{
        listId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
        list: z.ZodObject<{
            id: z.ZodUUID;
            boardId: z.ZodUUID;
            name: z.ZodString;
            position: z.ZodNumber;
            isArchived: z.ZodBoolean;
            subscribed: z.ZodBoolean;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserWithCardWatchersSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    cardWatchers: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
        card: z.ZodObject<{
            id: z.ZodUUID;
            listId: z.ZodUUID;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            isWatch: z.ZodBoolean;
            cardAssignees: z.ZodArray<z.ZodObject<{
                id: z.ZodUUID;
                username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                fullName: z.ZodString;
                avatarUrl: z.ZodString;
            }, z.core.$strip>>;
            attachmentsCount: z.ZodNumber;
            commentsCount: z.ZodNumber;
            checklistItemsCount: z.ZodNumber;
            completedChecklistItemsCount: z.ZodNumber;
            labels: z.ZodArray<z.ZodObject<{
                color: z.ZodEnum<{
                    subtle_yellow: "subtle_yellow";
                    subtle_orange: "subtle_orange";
                    subtle_red: "subtle_red";
                    subtle_purple: "subtle_purple";
                    green: "green";
                    yellow: "yellow";
                    orange: "orange";
                    red: "red";
                    purple: "purple";
                    bold_green: "bold_green";
                    bold_yellow: "bold_yellow";
                    bold_orange: "bold_orange";
                    bold_red: "bold_red";
                    bold_purple: "bold_purple";
                    subtle_blue: "subtle_blue";
                    subtle_sky: "subtle_sky";
                    subtle_lime: "subtle_lime";
                    subtle_pink: "subtle_pink";
                    subtle_black: "subtle_black";
                    blue: "blue";
                    sky: "sky";
                    lime: "lime";
                    pink: "pink";
                    black: "black";
                    bold_blue: "bold_blue";
                    bold_sky: "bold_sky";
                    bold_lime: "bold_lime";
                    bold_pink: "bold_pink";
                    bold_black: "bold_black";
                    default: "default";
                }>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, z.core.$strip>>;
            location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                latitude: z.ZodNumber;
                longitude: z.ZodNumber;
                address: z.ZodString;
            }, z.core.$strip>>>;
            isArchived: z.ZodBoolean;
            createdBy: z.ZodUUID;
            coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const UserFullDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    clerkId: z.ZodString;
    email: z.ZodEmail;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
    theme: z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>;
    emailNotification: z.ZodBoolean;
    pushNotification: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    boards: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        workspaceId: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        background: z.ZodEnum<{
            mountain: "mountain";
            valley: "valley";
            tree: "tree";
            snow: "snow";
        }>;
        createdBy: z.ZodUUID;
        allowCovers: z.ZodBoolean;
        showComplete: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        visibility: z.ZodEnum<{
            private: "private";
            workspace_members: "workspace_members";
            public: "public";
        }>;
        memberManage: z.ZodEnum<{
            admins: "admins";
            members: "members";
        }>;
        commenting: z.ZodEnum<{
            workspace_members: "workspace_members";
            disabled: "disabled";
            board_members: "board_members";
        }>;
    }, z.core.$strip>>;
    boardMembers: z.ZodArray<z.ZodObject<{
        boardId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            observer: "observer";
        }>;
        joinedAt: z.ZodISODateTime;
        board: z.ZodObject<{
            id: z.ZodUUID;
            workspaceId: z.ZodUUID;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            background: z.ZodEnum<{
                mountain: "mountain";
                valley: "valley";
                tree: "tree";
                snow: "snow";
            }>;
            createdBy: z.ZodUUID;
            allowCovers: z.ZodBoolean;
            showComplete: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
            lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            visibility: z.ZodEnum<{
                private: "private";
                workspace_members: "workspace_members";
                public: "public";
            }>;
            memberManage: z.ZodEnum<{
                admins: "admins";
                members: "members";
            }>;
            commenting: z.ZodEnum<{
                workspace_members: "workspace_members";
                disabled: "disabled";
                board_members: "board_members";
            }>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    workspaces: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        visibility: z.ZodEnum<{
            private: "private";
            public: "public";
        }>;
        premium: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        type: z.ZodEnum<{
            marketing: "marketing";
            sales_crm: "sales_crm";
            human_resources: "human_resources";
            small_business: "small_business";
            engineering_it: "engineering_it";
            education: "education";
            operations: "operations";
            other: "other";
        }>;
        createdBy: z.ZodUUID;
        workspaceMembershipRestrictions: z.ZodEnum<{
            anybody: "anybody";
            specific_domain: "specific_domain";
        }>;
        publicBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardCreation: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        publicBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        workspaceBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        privateBoardDeletion: z.ZodEnum<{
            workspace_member: "workspace_member";
            workspace_admin: "workspace_admin";
            nobody: "nobody";
        }>;
        allowGuestSharing: z.ZodEnum<{
            anybody: "anybody";
            only_workspace_member: "only_workspace_member";
        }>;
        allowSlackIntegration: z.ZodEnum<{
            workspace_member: "workspace_member";
            admins: "admins";
        }>;
    }, z.core.$strip>>;
    workspaceMembers: z.ZodArray<z.ZodObject<{
        workspaceId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            guest: "guest";
        }>;
        joinedAt: z.ZodISODateTime;
        workspace: z.ZodObject<{
            id: z.ZodUUID;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            visibility: z.ZodEnum<{
                private: "private";
                public: "public";
            }>;
            premium: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
            type: z.ZodEnum<{
                marketing: "marketing";
                sales_crm: "sales_crm";
                human_resources: "human_resources";
                small_business: "small_business";
                engineering_it: "engineering_it";
                education: "education";
                operations: "operations";
                other: "other";
            }>;
            createdBy: z.ZodUUID;
            workspaceMembershipRestrictions: z.ZodEnum<{
                anybody: "anybody";
                specific_domain: "specific_domain";
            }>;
            publicBoardCreation: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            workspaceBoardCreation: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            privateBoardCreation: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            publicBoardDeletion: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            workspaceBoardDeletion: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            privateBoardDeletion: z.ZodEnum<{
                workspace_member: "workspace_member";
                workspace_admin: "workspace_admin";
                nobody: "nobody";
            }>;
            allowGuestSharing: z.ZodEnum<{
                anybody: "anybody";
                only_workspace_member: "only_workspace_member";
            }>;
            allowSlackIntegration: z.ZodEnum<{
                workspace_member: "workspace_member";
                admins: "admins";
            }>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    cardAssignees: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        card: z.ZodObject<{
            id: z.ZodUUID;
            listId: z.ZodUUID;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            isWatch: z.ZodBoolean;
            cardAssignees: z.ZodArray<z.ZodObject<{
                id: z.ZodUUID;
                username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                fullName: z.ZodString;
                avatarUrl: z.ZodString;
            }, z.core.$strip>>;
            attachmentsCount: z.ZodNumber;
            commentsCount: z.ZodNumber;
            checklistItemsCount: z.ZodNumber;
            completedChecklistItemsCount: z.ZodNumber;
            labels: z.ZodArray<z.ZodObject<{
                color: z.ZodEnum<{
                    subtle_yellow: "subtle_yellow";
                    subtle_orange: "subtle_orange";
                    subtle_red: "subtle_red";
                    subtle_purple: "subtle_purple";
                    green: "green";
                    yellow: "yellow";
                    orange: "orange";
                    red: "red";
                    purple: "purple";
                    bold_green: "bold_green";
                    bold_yellow: "bold_yellow";
                    bold_orange: "bold_orange";
                    bold_red: "bold_red";
                    bold_purple: "bold_purple";
                    subtle_blue: "subtle_blue";
                    subtle_sky: "subtle_sky";
                    subtle_lime: "subtle_lime";
                    subtle_pink: "subtle_pink";
                    subtle_black: "subtle_black";
                    blue: "blue";
                    sky: "sky";
                    lime: "lime";
                    pink: "pink";
                    black: "black";
                    bold_blue: "bold_blue";
                    bold_sky: "bold_sky";
                    bold_lime: "bold_lime";
                    bold_pink: "bold_pink";
                    bold_black: "bold_black";
                    default: "default";
                }>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, z.core.$strip>>;
            location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                latitude: z.ZodNumber;
                longitude: z.ZodNumber;
                address: z.ZodString;
            }, z.core.$strip>>>;
            isArchived: z.ZodBoolean;
            createdBy: z.ZodUUID;
            coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    listWatchers: z.ZodArray<z.ZodObject<{
        listId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
        list: z.ZodObject<{
            id: z.ZodUUID;
            boardId: z.ZodUUID;
            name: z.ZodString;
            position: z.ZodNumber;
            isArchived: z.ZodBoolean;
            subscribed: z.ZodBoolean;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    cardWatchers: z.ZodArray<z.ZodObject<{
        cardId: z.ZodUUID;
        userId: z.ZodUUID;
        createdAt: z.ZodISODateTime;
        card: z.ZodObject<{
            id: z.ZodUUID;
            listId: z.ZodUUID;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dueDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            startDate: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
            position: z.ZodNumber;
            isWatch: z.ZodBoolean;
            cardAssignees: z.ZodArray<z.ZodObject<{
                id: z.ZodUUID;
                username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                fullName: z.ZodString;
                avatarUrl: z.ZodString;
            }, z.core.$strip>>;
            attachmentsCount: z.ZodNumber;
            commentsCount: z.ZodNumber;
            checklistItemsCount: z.ZodNumber;
            completedChecklistItemsCount: z.ZodNumber;
            labels: z.ZodArray<z.ZodObject<{
                color: z.ZodEnum<{
                    subtle_yellow: "subtle_yellow";
                    subtle_orange: "subtle_orange";
                    subtle_red: "subtle_red";
                    subtle_purple: "subtle_purple";
                    green: "green";
                    yellow: "yellow";
                    orange: "orange";
                    red: "red";
                    purple: "purple";
                    bold_green: "bold_green";
                    bold_yellow: "bold_yellow";
                    bold_orange: "bold_orange";
                    bold_red: "bold_red";
                    bold_purple: "bold_purple";
                    subtle_blue: "subtle_blue";
                    subtle_sky: "subtle_sky";
                    subtle_lime: "subtle_lime";
                    subtle_pink: "subtle_pink";
                    subtle_black: "subtle_black";
                    blue: "blue";
                    sky: "sky";
                    lime: "lime";
                    pink: "pink";
                    black: "black";
                    bold_blue: "bold_blue";
                    bold_sky: "bold_sky";
                    bold_lime: "bold_lime";
                    bold_pink: "bold_pink";
                    bold_black: "bold_black";
                    default: "default";
                }>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, z.core.$strip>>;
            location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                latitude: z.ZodNumber;
                longitude: z.ZodNumber;
                address: z.ZodString;
            }, z.core.$strip>>>;
            isArchived: z.ZodBoolean;
            createdBy: z.ZodUUID;
            coverImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodISODateTime;
            updatedAt: z.ZodISODateTime;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const WorkspaceWithMembersSchema: z.ZodObject<{
    id: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    visibility: z.ZodEnum<{
        private: "private";
        public: "public";
    }>;
    premium: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    type: z.ZodEnum<{
        marketing: "marketing";
        sales_crm: "sales_crm";
        human_resources: "human_resources";
        small_business: "small_business";
        engineering_it: "engineering_it";
        education: "education";
        operations: "operations";
        other: "other";
    }>;
    createdBy: z.ZodUUID;
    workspaceMembershipRestrictions: z.ZodEnum<{
        anybody: "anybody";
        specific_domain: "specific_domain";
    }>;
    publicBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    publicBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    allowGuestSharing: z.ZodEnum<{
        anybody: "anybody";
        only_workspace_member: "only_workspace_member";
    }>;
    allowSlackIntegration: z.ZodEnum<{
        workspace_member: "workspace_member";
        admins: "admins";
    }>;
    workspaceMembers: z.ZodArray<z.ZodObject<{
        workspaceId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            guest: "guest";
        }>;
        joinedAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const WorkspaceWithBoardsSchema: z.ZodObject<{
    id: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    visibility: z.ZodEnum<{
        private: "private";
        public: "public";
    }>;
    premium: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    type: z.ZodEnum<{
        marketing: "marketing";
        sales_crm: "sales_crm";
        human_resources: "human_resources";
        small_business: "small_business";
        engineering_it: "engineering_it";
        education: "education";
        operations: "operations";
        other: "other";
    }>;
    createdBy: z.ZodUUID;
    workspaceMembershipRestrictions: z.ZodEnum<{
        anybody: "anybody";
        specific_domain: "specific_domain";
    }>;
    publicBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    publicBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    allowGuestSharing: z.ZodEnum<{
        anybody: "anybody";
        only_workspace_member: "only_workspace_member";
    }>;
    allowSlackIntegration: z.ZodEnum<{
        workspace_member: "workspace_member";
        admins: "admins";
    }>;
    boards: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        workspaceId: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        background: z.ZodEnum<{
            mountain: "mountain";
            valley: "valley";
            tree: "tree";
            snow: "snow";
        }>;
        createdBy: z.ZodUUID;
        allowCovers: z.ZodBoolean;
        showComplete: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        visibility: z.ZodEnum<{
            private: "private";
            workspace_members: "workspace_members";
            public: "public";
        }>;
        memberManage: z.ZodEnum<{
            admins: "admins";
            members: "members";
        }>;
        commenting: z.ZodEnum<{
            workspace_members: "workspace_members";
            disabled: "disabled";
            board_members: "board_members";
        }>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const WorkspaceWithCreatorSchema: z.ZodObject<{
    id: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    visibility: z.ZodEnum<{
        private: "private";
        public: "public";
    }>;
    premium: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    type: z.ZodEnum<{
        marketing: "marketing";
        sales_crm: "sales_crm";
        human_resources: "human_resources";
        small_business: "small_business";
        engineering_it: "engineering_it";
        education: "education";
        operations: "operations";
        other: "other";
    }>;
    createdBy: z.ZodUUID;
    workspaceMembershipRestrictions: z.ZodEnum<{
        anybody: "anybody";
        specific_domain: "specific_domain";
    }>;
    publicBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    publicBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    allowGuestSharing: z.ZodEnum<{
        anybody: "anybody";
        only_workspace_member: "only_workspace_member";
    }>;
    allowSlackIntegration: z.ZodEnum<{
        workspace_member: "workspace_member";
        admins: "admins";
    }>;
    creator: z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const WorkspaceFullDtoSchema: z.ZodObject<{
    id: z.ZodUUID;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    visibility: z.ZodEnum<{
        private: "private";
        public: "public";
    }>;
    premium: z.ZodBoolean;
    createdAt: z.ZodISODateTime;
    updatedAt: z.ZodISODateTime;
    type: z.ZodEnum<{
        marketing: "marketing";
        sales_crm: "sales_crm";
        human_resources: "human_resources";
        small_business: "small_business";
        engineering_it: "engineering_it";
        education: "education";
        operations: "operations";
        other: "other";
    }>;
    createdBy: z.ZodUUID;
    workspaceMembershipRestrictions: z.ZodEnum<{
        anybody: "anybody";
        specific_domain: "specific_domain";
    }>;
    publicBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardCreation: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    publicBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    workspaceBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    privateBoardDeletion: z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>;
    allowGuestSharing: z.ZodEnum<{
        anybody: "anybody";
        only_workspace_member: "only_workspace_member";
    }>;
    allowSlackIntegration: z.ZodEnum<{
        workspace_member: "workspace_member";
        admins: "admins";
    }>;
    workspaceMembers: z.ZodArray<z.ZodObject<{
        workspaceId: z.ZodUUID;
        userId: z.ZodUUID;
        role: z.ZodEnum<{
            admin: "admin";
            member: "member";
            guest: "guest";
        }>;
        joinedAt: z.ZodISODateTime;
        user: z.ZodObject<{
            id: z.ZodUUID;
            clerkId: z.ZodString;
            email: z.ZodEmail;
            username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            fullName: z.ZodString;
            avatarUrl: z.ZodString;
            theme: z.ZodEnum<{
                light: "light";
                dark: "dark";
                system: "system";
            }>;
            emailNotification: z.ZodBoolean;
            pushNotification: z.ZodBoolean;
            createdAt: z.ZodISODateTime;
            bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
    boards: z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        workspaceId: z.ZodUUID;
        name: z.ZodString;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        background: z.ZodEnum<{
            mountain: "mountain";
            valley: "valley";
            tree: "tree";
            snow: "snow";
        }>;
        createdBy: z.ZodUUID;
        allowCovers: z.ZodBoolean;
        showComplete: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        updatedAt: z.ZodISODateTime;
        lastActivityAt: z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>;
        visibility: z.ZodEnum<{
            private: "private";
            workspace_members: "workspace_members";
            public: "public";
        }>;
        memberManage: z.ZodEnum<{
            admins: "admins";
            members: "members";
        }>;
        commenting: z.ZodEnum<{
            workspace_members: "workspace_members";
            disabled: "disabled";
            board_members: "board_members";
        }>;
    }, z.core.$strip>>;
    creator: z.ZodObject<{
        id: z.ZodUUID;
        clerkId: z.ZodString;
        email: z.ZodEmail;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
        theme: z.ZodEnum<{
            light: "light";
            dark: "dark";
            system: "system";
        }>;
        emailNotification: z.ZodBoolean;
        pushNotification: z.ZodBoolean;
        createdAt: z.ZodISODateTime;
        bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const CreateWorkspaceInputSchema: z.ZodObject<{
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    type: z.ZodEnum<{
        marketing: "marketing";
        sales_crm: "sales_crm";
        human_resources: "human_resources";
        small_business: "small_business";
        engineering_it: "engineering_it";
        education: "education";
        operations: "operations";
        other: "other";
    }>;
}, z.core.$strip>;
export declare const CreateBoardInputSchema: z.ZodObject<{
    name: z.ZodString;
    background: z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>;
    visibility: z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>;
    workspaceId: z.ZodUUID;
}, z.core.$strip>;
export declare const CreateListInputSchema: z.ZodObject<{
    name: z.ZodString;
}, z.core.$strip>;
export declare const CreateLabelInputSchema: z.ZodObject<{
    color: z.ZodEnum<{
        subtle_yellow: "subtle_yellow";
        subtle_orange: "subtle_orange";
        subtle_red: "subtle_red";
        subtle_purple: "subtle_purple";
        green: "green";
        yellow: "yellow";
        orange: "orange";
        red: "red";
        purple: "purple";
        bold_green: "bold_green";
        bold_yellow: "bold_yellow";
        bold_orange: "bold_orange";
        bold_red: "bold_red";
        bold_purple: "bold_purple";
        subtle_blue: "subtle_blue";
        subtle_sky: "subtle_sky";
        subtle_lime: "subtle_lime";
        subtle_pink: "subtle_pink";
        subtle_black: "subtle_black";
        blue: "blue";
        sky: "sky";
        lime: "lime";
        pink: "pink";
        black: "black";
        bold_blue: "bold_blue";
        bold_sky: "bold_sky";
        bold_lime: "bold_lime";
        bold_pink: "bold_pink";
        bold_black: "bold_black";
        default: "default";
    }>;
    name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
}, z.core.$strip>;
export declare const CreateCardLabelInputSchema: z.ZodObject<{
    labelId: z.ZodUUID;
}, z.core.$strip>;
export declare const CreateCardInputSchema: z.ZodObject<{
    title: z.ZodString;
    location: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>;
}, z.core.$strip>;
export declare const CreateChecklistInputSchema: z.ZodObject<{
    title: z.ZodString;
    position: z.ZodNumber;
}, z.core.$strip>;
export declare const CreateChecklistItemInputSchema: z.ZodObject<{
    position: z.ZodNumber;
    text: z.ZodString;
}, z.core.$strip>;
export declare const CreateOnBoardingInputSchema: z.ZodObject<{
    fullName: z.ZodString;
    email: z.ZodEmail;
    avatarUrl: z.ZodURL;
    password: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const CreateUserInputSchema: z.ZodObject<{
    email: z.ZodEmail;
    fullName: z.ZodString;
    avatarUrl: z.ZodString;
}, z.core.$strip>;
export declare const CreateCommentInputSchema: z.ZodObject<{
    text: z.ZodString;
}, z.core.$strip>;
export declare const CreateWorkspaceMemberInputSchema: z.ZodObject<{
    userId: z.ZodUUID;
    role: z.ZodEnum<{
        admin: "admin";
        member: "member";
        guest: "guest";
    }>;
}, z.core.$strip>;
export declare const CreateBoardMemberInputSchema: z.ZodObject<{
    userId: z.ZodUUID;
    role: z.ZodEnum<{
        admin: "admin";
        member: "member";
        observer: "observer";
    }>;
}, z.core.$strip>;
export declare const CreateAttachmentInputSchema: z.ZodObject<{
    url: z.ZodString;
    filename: z.ZodString;
    bytes: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    meta: z.ZodOptional<z.ZodUnknown>;
}, z.core.$strip>;
export declare const UpdateWorkspaceSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    visibility: z.ZodOptional<z.ZodEnum<{
        private: "private";
        public: "public";
    }>>;
    premium: z.ZodOptional<z.ZodBoolean>;
    createdAt: z.ZodOptional<z.ZodISODateTime>;
    updatedAt: z.ZodOptional<z.ZodISODateTime>;
    type: z.ZodOptional<z.ZodEnum<{
        marketing: "marketing";
        sales_crm: "sales_crm";
        human_resources: "human_resources";
        small_business: "small_business";
        engineering_it: "engineering_it";
        education: "education";
        operations: "operations";
        other: "other";
    }>>;
    createdBy: z.ZodOptional<z.ZodUUID>;
    workspaceMembershipRestrictions: z.ZodOptional<z.ZodEnum<{
        anybody: "anybody";
        specific_domain: "specific_domain";
    }>>;
    publicBoardCreation: z.ZodOptional<z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>>;
    workspaceBoardCreation: z.ZodOptional<z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>>;
    privateBoardCreation: z.ZodOptional<z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>>;
    publicBoardDeletion: z.ZodOptional<z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>>;
    workspaceBoardDeletion: z.ZodOptional<z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>>;
    privateBoardDeletion: z.ZodOptional<z.ZodEnum<{
        workspace_member: "workspace_member";
        workspace_admin: "workspace_admin";
        nobody: "nobody";
    }>>;
    allowGuestSharing: z.ZodOptional<z.ZodEnum<{
        anybody: "anybody";
        only_workspace_member: "only_workspace_member";
    }>>;
    allowSlackIntegration: z.ZodOptional<z.ZodEnum<{
        workspace_member: "workspace_member";
        admins: "admins";
    }>>;
}, z.core.$strip>;
export declare const UpdateBoardSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    workspaceId: z.ZodOptional<z.ZodUUID>;
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    background: z.ZodOptional<z.ZodEnum<{
        mountain: "mountain";
        valley: "valley";
        tree: "tree";
        snow: "snow";
    }>>;
    createdBy: z.ZodOptional<z.ZodUUID>;
    allowCovers: z.ZodOptional<z.ZodBoolean>;
    showComplete: z.ZodOptional<z.ZodBoolean>;
    createdAt: z.ZodOptional<z.ZodISODateTime>;
    updatedAt: z.ZodOptional<z.ZodISODateTime>;
    lastActivityAt: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>>;
    visibility: z.ZodOptional<z.ZodEnum<{
        private: "private";
        workspace_members: "workspace_members";
        public: "public";
    }>>;
    memberManage: z.ZodOptional<z.ZodEnum<{
        admins: "admins";
        members: "members";
    }>>;
    commenting: z.ZodOptional<z.ZodEnum<{
        workspace_members: "workspace_members";
        disabled: "disabled";
        board_members: "board_members";
    }>>;
}, z.core.$strip>;
export declare const UpdateListSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    boardId: z.ZodOptional<z.ZodUUID>;
    name: z.ZodOptional<z.ZodString>;
    position: z.ZodOptional<z.ZodNumber>;
    isArchived: z.ZodOptional<z.ZodBoolean>;
    subscribed: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strip>;
export declare const UpdateLabelSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    boardId: z.ZodOptional<z.ZodUUID>;
    name: z.ZodOptional<z.ZodNullable<z.ZodOptional<z.ZodString>>>;
    color: z.ZodOptional<z.ZodEnum<{
        subtle_yellow: "subtle_yellow";
        subtle_orange: "subtle_orange";
        subtle_red: "subtle_red";
        subtle_purple: "subtle_purple";
        green: "green";
        yellow: "yellow";
        orange: "orange";
        red: "red";
        purple: "purple";
        bold_green: "bold_green";
        bold_yellow: "bold_yellow";
        bold_orange: "bold_orange";
        bold_red: "bold_red";
        bold_purple: "bold_purple";
        subtle_blue: "subtle_blue";
        subtle_sky: "subtle_sky";
        subtle_lime: "subtle_lime";
        subtle_pink: "subtle_pink";
        subtle_black: "subtle_black";
        blue: "blue";
        sky: "sky";
        lime: "lime";
        pink: "pink";
        black: "black";
        bold_blue: "bold_blue";
        bold_sky: "bold_sky";
        bold_lime: "bold_lime";
        bold_pink: "bold_pink";
        bold_black: "bold_black";
        default: "default";
    }>>;
}, z.core.$strip>;
export declare const UpdateCardSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    listId: z.ZodOptional<z.ZodUUID>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    dueDate: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>>;
    startDate: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>>;
    position: z.ZodOptional<z.ZodNumber>;
    isWatch: z.ZodOptional<z.ZodBoolean>;
    cardAssignees: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodUUID;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        fullName: z.ZodString;
        avatarUrl: z.ZodString;
    }, z.core.$strip>>>;
    attachmentsCount: z.ZodOptional<z.ZodNumber>;
    commentsCount: z.ZodOptional<z.ZodNumber>;
    checklistItemsCount: z.ZodOptional<z.ZodNumber>;
    completedChecklistItemsCount: z.ZodOptional<z.ZodNumber>;
    labels: z.ZodOptional<z.ZodArray<z.ZodObject<{
        color: z.ZodEnum<{
            subtle_yellow: "subtle_yellow";
            subtle_orange: "subtle_orange";
            subtle_red: "subtle_red";
            subtle_purple: "subtle_purple";
            green: "green";
            yellow: "yellow";
            orange: "orange";
            red: "red";
            purple: "purple";
            bold_green: "bold_green";
            bold_yellow: "bold_yellow";
            bold_orange: "bold_orange";
            bold_red: "bold_red";
            bold_purple: "bold_purple";
            subtle_blue: "subtle_blue";
            subtle_sky: "subtle_sky";
            subtle_lime: "subtle_lime";
            subtle_pink: "subtle_pink";
            subtle_black: "subtle_black";
            blue: "blue";
            sky: "sky";
            lime: "lime";
            pink: "pink";
            black: "black";
            bold_blue: "bold_blue";
            bold_sky: "bold_sky";
            bold_lime: "bold_lime";
            bold_pink: "bold_pink";
            bold_black: "bold_black";
            default: "default";
        }>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>>;
    location: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodString;
    }, z.core.$strip>>>>;
    isArchived: z.ZodOptional<z.ZodBoolean>;
    createdBy: z.ZodOptional<z.ZodUUID>;
    coverImageUrl: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    createdAt: z.ZodOptional<z.ZodISODateTime>;
    updatedAt: z.ZodOptional<z.ZodISODateTime>;
}, z.core.$strip>;
export declare const UpdateChecklistSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    cardId: z.ZodOptional<z.ZodUUID>;
    title: z.ZodOptional<z.ZodString>;
    position: z.ZodOptional<z.ZodNumber>;
}, z.core.$strip>;
export declare const UpdateChecklistItemSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    checklistId: z.ZodOptional<z.ZodUUID>;
    text: z.ZodOptional<z.ZodString>;
    isCompleted: z.ZodOptional<z.ZodBoolean>;
    dueDate: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodISODateTime>>>;
    position: z.ZodOptional<z.ZodNumber>;
}, z.core.$strip>;
export declare const UpdateUserSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    clerkId: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodEmail>;
    username: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    fullName: z.ZodOptional<z.ZodString>;
    avatarUrl: z.ZodOptional<z.ZodString>;
    theme: z.ZodOptional<z.ZodEnum<{
        light: "light";
        dark: "dark";
        system: "system";
    }>>;
    emailNotification: z.ZodOptional<z.ZodBoolean>;
    pushNotification: z.ZodOptional<z.ZodBoolean>;
    createdAt: z.ZodOptional<z.ZodISODateTime>;
    bio: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, z.core.$strip>;
export declare const UpdateCommentSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUUID>;
    cardId: z.ZodOptional<z.ZodUUID>;
    userId: z.ZodOptional<z.ZodUUID>;
    text: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodISODateTime>;
}, z.core.$strip>;
export declare const UpdateWorkspaceMemberSchema: z.ZodObject<{
    role: z.ZodOptional<z.ZodEnum<{
        admin: "admin";
        member: "member";
        guest: "guest";
    }>>;
}, z.core.$strip>;
export declare const UpdateBoardMemberSchema: z.ZodObject<{
    role: z.ZodOptional<z.ZodEnum<{
        admin: "admin";
        member: "member";
        observer: "observer";
    }>>;
}, z.core.$strip>;
export declare const UpdateAttachmentSchema: z.ZodObject<{
    filename: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const IdParamSchema: z.ZodObject<{
    id: z.ZodUUID;
}, z.core.$strip>;
export declare const SearchQuerySchema: z.ZodObject<{
    search: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const UserIdParamSchema: z.ZodObject<{
    userId: z.ZodUUID;
}, z.core.$strip>;
export declare const WorkspacesIdParamSchema: z.ZodObject<{
    workspaceId: z.ZodUUID;
}, z.core.$strip>;
export declare const BoardIdParamSchema: z.ZodObject<{
    boardId: z.ZodUUID;
}, z.core.$strip>;
export declare const ListIdParamSchema: z.ZodObject<{
    listId: z.ZodUUID;
}, z.core.$strip>;
export declare const CardIdParamSchema: z.ZodObject<{
    cardId: z.ZodUUID;
}, z.core.$strip>;
export declare const LabelIdParamSchema: z.ZodObject<{
    labelId: z.ZodUUID;
}, z.core.$strip>;
export declare const ChecklistIdParamSchema: z.ZodObject<{
    checklistId: z.ZodUUID;
}, z.core.$strip>;
export declare const ChecklistItemIdParamSchema: z.ZodObject<{
    itemId: z.ZodUUID;
}, z.core.$strip>;
export declare const CommentIdParamSchema: z.ZodObject<{
    commentId: z.ZodUUID;
}, z.core.$strip>;
//# sourceMappingURL=schemas.d.ts.map